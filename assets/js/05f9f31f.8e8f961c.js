"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3084],{72299:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var t=r(85893),i=r(11151);const s={},a="Local CoreData Database",o={id:"api-specification/database-integration/Local-coredata-database",title:"Local CoreData Database",description:"Class",source:"@site/docs/api-specification/database-integration/Local-coredata-database.md",sourceDirName:"api-specification/database-integration",slug:"/api-specification/database-integration/Local-coredata-database",permalink:"/project-smartweights/docs/api-specification/database-integration/Local-coredata-database",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-smartweights/edit/main/documentation/docs/api-specification/database-integration/Local-coredata-database.md",tags:[],version:"current",lastUpdatedBy:"Adam Ra",frontMatter:{},sidebar:"docsSidebar",previous:{title:"CloudKit",permalink:"/project-smartweights/docs/api-specification/database-integration/CloudKit"},next:{title:"Hardware Software",permalink:"/project-smartweights/docs/api-specification/hardware-software"}},c={},d=[{value:"Instance Properties",id:"instance-properties",level:3},{value:"Type Methods",id:"type-methods",level:3},{value:"Relationships",id:"relationships",level:2},{value:"Inherits From",id:"inherits-from",level:3},{value:"Inherited By",id:"inherited-by",level:3},{value:"Instance Properties",id:"instance-properties-1",level:3},{value:"Type Methods",id:"type-methods-1",level:3},{value:"Relationships",id:"relationships-1",level:2},{value:"Inherits From",id:"inherits-from-1",level:3},{value:"Instance Properties",id:"instance-properties-2",level:3},{value:"Type Methods",id:"type-methods-2",level:3},{value:"Relationships",id:"relationships-2",level:2},{value:"Inherits From",id:"inherits-from-2",level:3},{value:"Inherited By",id:"inherited-by-1",level:3},{value:"Instance Properties",id:"instance-properties-3",level:3},{value:"Type Methods",id:"type-methods-3",level:3},{value:"Relationships",id:"relationships-3",level:2},{value:"Inherits From",id:"inherits-from-3",level:3},{value:"Initializers",id:"initializers",level:3},{value:"Instance Properties",id:"instance-properties-4",level:3},{value:"Type Properties",id:"type-properties",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"local-coredata-database",children:"Local CoreData Database"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Class"})}),"\n",(0,t.jsx)(n.h1,{id:"exercise",children:"Exercise"}),"\n",(0,t.jsx)(n.p,{children:"A CoreData entity that stores data related to Exercises"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"@objc(Exercise)\nclass Exercise\n"})}),"\n",(0,t.jsx)(n.h3,{id:"instance-properties",children:"Instance Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"var detail: String?\nvar exercise_id: Int16\nvar name: String?\n"})}),"\n",(0,t.jsx)(n.h3,{id:"type-methods",children:"Type Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"class func fetchRequest() -> NSFetchRequest<Exercise>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"relationships",children:"Relationships"}),"\n",(0,t.jsx)(n.h3,{id:"inherits-from",children:"Inherits From"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CoreData.NSManagedObject"})}),"\n",(0,t.jsx)(n.h3,{id:"inherited-by",children:"Inherited By"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Form"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Class"})}),"\n",(0,t.jsx)(n.h1,{id:"form",children:"Form"}),"\n",(0,t.jsx)(n.p,{children:"A CoreData entity that stores data related to an Exercise Form"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"@objc(Form)\nclass Form\n"})}),"\n",(0,t.jsx)(n.h3,{id:"instance-properties-1",children:"Instance Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"var form_id: Int16\nvar technique: String?\n"})}),"\n",(0,t.jsx)(n.h3,{id:"type-methods-1",children:"Type Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"class func fetchRequest() -> NSFetchRequest<Exercise>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"relationships-1",children:"Relationships"}),"\n",(0,t.jsx)(n.h3,{id:"inherits-from-1",children:"Inherits From"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Exercise"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Class"})}),"\n",(0,t.jsx)(n.h1,{id:"exercise-1",children:"Exercise"}),"\n",(0,t.jsx)(n.p,{children:"A CoreData entity that stores data related to Sensors e.g Altimeter, Barometer, and etc..."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"@objc(SensorSystem)\nclass SensorSYstem\n"})}),"\n",(0,t.jsx)(n.h3,{id:"instance-properties-2",children:"Instance Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"var sensor_id: Int16\n"})}),"\n",(0,t.jsx)(n.h3,{id:"type-methods-2",children:"Type Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"class func fetchRequest() -> NSFetchRequest<Exercise>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"relationships-2",children:"Relationships"}),"\n",(0,t.jsx)(n.h3,{id:"inherits-from-2",children:"Inherits From"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CoreData.NSManagedObject"})}),"\n",(0,t.jsx)(n.h3,{id:"inherited-by-1",children:"Inherited By"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Measurement"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Class"})}),"\n",(0,t.jsx)(n.h1,{id:"measurement",children:"Measurement"}),"\n",(0,t.jsx)(n.p,{children:"A CoreData entity that stores data related to data collected from the Sensors during a workout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"@objc(Measurement)\nclass Measurement\n"})}),"\n",(0,t.jsx)(n.h3,{id:"instance-properties-3",children:"Instance Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"var angle: Float\nvar dateTime: Date?\nvar measurement_id: Float\nvar speed: Float\nvar user_id: Int32\nvar velocity: Float\nvar x_coord: Float\nvar y_coord: Float\nvar z_coord: Float\n"})}),"\n",(0,t.jsx)(n.h3,{id:"type-methods-3",children:"Type Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"class func fetchRequest() -> NSFetchRequest<Exercise>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"relationships-3",children:"Relationships"}),"\n",(0,t.jsx)(n.h3,{id:"inherits-from-3",children:"Inherits From"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"SensorSystem"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Structure"})}),"\n",(0,t.jsx)(n.h1,{id:"persistencecontroller",children:"PersistenceController"}),"\n",(0,t.jsx)(n.p,{children:"Defines a PersistenceController struct to manage the Core Data stack for the application"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"struct PersistenceController\n"})}),"\n",(0,t.jsx)(n.h3,{id:"initializers",children:"Initializers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"init (inMemory: Bool)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initializes a new PersistenceController. The inMemory flag determines whether the persistent store is stored in memory or on disk"}),"\n",(0,t.jsx)(n.h3,{id:"instance-properties-4",children:"Instance Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"let container: NSPersistentCloudKitContainer\n"})}),"\n",(0,t.jsx)(n.p,{children:"The persistent container for the application. This implementation creates and returns a container, having loaded the store for the application to it"}),"\n",(0,t.jsx)(n.h3,{id:"type-properties",children:"Type Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"static var preview: PersistenceController\n"})}),"\n",(0,t.jsx)(n.p,{children:"Creates a preview instance of PersistenceController for development and testing purposes. This in-memory version is populated with sample data to facilitate UI development and testing without affecting the actual database"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"static let shared: PersistenceController\n"})}),"\n",(0,t.jsx)(n.p,{children:"Provides a shared instance of PersistenceController for use throughout the app"}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>a});var t=r(67294);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);