"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-smartweights/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-smartweights/docs/requirements/system-overview","docId":"requirements/system-overview","unlisted":false},{"type":"link","label":"System Block Diagram","href":"/project-smartweights/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram","unlisted":false},{"type":"link","label":"General Requirements","href":"/project-smartweights/docs/requirements/general-requirements","docId":"requirements/general-requirements","unlisted":false},{"type":"link","label":"Features and Requirements","href":"/project-smartweights/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements","unlisted":false},{"type":"link","label":"Use-case descriptions","href":"/project-smartweights/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions","unlisted":false}],"href":"/project-smartweights/docs/category/requirements-specification"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"design","href":"/project-smartweights/docs/system-architecture/design","docId":"system-architecture/design","unlisted":false},{"type":"link","label":"Sequence Diagrams","href":"/project-smartweights/docs/system-architecture/sequence-diagrams","docId":"system-architecture/sequence-diagrams","unlisted":false},{"type":"link","label":"Development Environment","href":"/project-smartweights/docs/system-architecture/development-environment","docId":"system-architecture/development-environment","unlisted":false},{"type":"link","label":"Version Control","href":"/project-smartweights/docs/system-architecture/version-control","docId":"system-architecture/version-control","unlisted":false},{"type":"link","label":"Design Mockup","href":"/project-smartweights/docs/system-architecture/design-mockup","docId":"system-architecture/design-mockup","unlisted":false},{"type":"link","label":"Class Diagram","href":"/project-smartweights/docs/system-architecture/class-diagram","docId":"system-architecture/class-diagram","unlisted":false},{"type":"link","label":"Circuit Diagram","href":"/project-smartweights/docs/system-architecture/circuit-diagram","docId":"system-architecture/circuit-diagram","unlisted":false},{"type":"link","label":"Database Diagrams","href":"/project-smartweights/docs/system-architecture/database-diagrams","docId":"system-architecture/database-diagrams","unlisted":false},{"type":"link","label":"Neural Network Paradigm","href":"/project-smartweights/docs/system-architecture/neural-network-paradigm","docId":"system-architecture/neural-network-paradigm","unlisted":false}],"href":"/project-smartweights/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design Document - Part II API","href":"/project-smartweights/docs/api-specification/design-api-intro","docId":"api-specification/design-api-intro","unlisted":false},{"type":"link","label":"API 1 - Swagger Petstore","href":"/project-smartweights/docs/api-specification/openapi-spec","docId":"api-specification/openapi-spec","unlisted":false},{"type":"link","label":"CalculatorModel.java","href":"/project-smartweights/docs/api-specification/calculator-model-generated","docId":"api-specification/calculator-model-generated","unlisted":false}],"href":"/project-smartweights/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-smartweights/docs/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"Integration tests","href":"/project-smartweights/docs/testing/integration-testing","docId":"testing/integration-testing","unlisted":false},{"type":"link","label":"Acceptance test","href":"/project-smartweights/docs/testing/acceptence-testing","docId":"testing/acceptence-testing","unlisted":false}],"href":"/project-smartweights/docs/category/test-procedures"}]},"docs":{"api-specification/calculator-model-generated":{"id":"api-specification/calculator-model-generated","title":"CalculatorModel.java","description":"(generated using Javadoc to Markdown)","sidebar":"docsSidebar"},"api-specification/design-api-intro":{"id":"api-specification/design-api-intro","title":"Design Document - Part II API","description":"What should be in this section.","sidebar":"docsSidebar"},"api-specification/openapi-spec":{"id":"api-specification/openapi-spec","title":"API 1 - Swagger Petstore","description":"API Specification from openapi.yml","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Functional Requirements","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"- iOS","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"BlockDiagram","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1 - Account Login","sidebar":"docsSidebar"},"system-architecture/circuit-diagram":{"id":"system-architecture/circuit-diagram","title":"Circuit Diagram","description":"Parts Included","sidebar":"docsSidebar"},"system-architecture/class-diagram":{"id":"system-architecture/class-diagram","title":"Class Diagram","description":"SmartWeights uses an MVVM architecture and the class diagrams reflect as such. The frontend represents the views and the backend represents the viewmodels and models. The following is separated in this manner. Every view has its own respective viewmodel.","sidebar":"docsSidebar"},"system-architecture/database-diagrams":{"id":"system-architecture/database-diagrams","title":"Database Diagrams","description":"SmartWeights uses a NoSQL approach to the database design. It combines usage of both cloud based database (Firebase) and local storage database (CoreData).","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"design","description":"Purpose","sidebar":"docsSidebar"},"system-architecture/design-mockup":{"id":"system-architecture/design-mockup","title":"Design Mockup","description":"Login Page","sidebar":"docsSidebar"},"system-architecture/development-environment":{"id":"system-architecture/development-environment","title":"Development Environment","description":"Documentation","sidebar":"docsSidebar"},"system-architecture/neural-network-paradigm":{"id":"system-architecture/neural-network-paradigm","title":"Neural Network Paradigm","description":"What is an Artificial Neural Network (ANN)?","sidebar":"docsSidebar"},"system-architecture/sequence-diagrams":{"id":"system-architecture/sequence-diagrams","title":"Sequence Diagrams","description":"Use Case 1 - Account Login","sidebar":"docsSidebar"},"system-architecture/version-control":{"id":"system-architecture/version-control","title":"Version Control","description":"This project will be managed using Git and GitHub. The main branch is protected and requires an approved pull request to merge. Each feature of the project is under its own branch and created from its respective Jira ticket.","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"For each method, one or more test cases.","sidebar":"docsSidebar"}}}')}}]);