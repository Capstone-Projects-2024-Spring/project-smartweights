"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1270],{64225:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>a,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var r=s(85893),i=s(11151);const l={sidebar_position:1},t="Unit tests",c={id:"testing/unit-testing",title:"Unit tests",description:"Swift unit tests are done with Swift's XCTest",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-smartweights/docs/testing/unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-smartweights/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Tu",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-smartweights/docs/category/test-procedures"},next:{title:"Integration tests",permalink:"/project-smartweights/docs/testing/integration-testing"}},d={},h=[{value:"Front End",id:"front-end",level:2},{value:"Pet Page",id:"pet-page",level:3},{value:"WorkoutViewModel",id:"workoutviewmodel",level:3},{value:"Pet Store Page",id:"pet-store-page",level:3},{value:"FormCriteria",id:"formcriteria",level:3},{value:"Backend",id:"backend",level:2},{value:"CloudKit DB",id:"cloudkit-db",level:3},{value:"CoreData Local DB",id:"coredata-local-db",level:3}];function o(e){const n={em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"unit-tests",children:"Unit tests"}),"\n",(0,r.jsx)(n.p,{children:"Swift unit tests are done with Swift's XCTest"}),"\n",(0,r.jsx)(n.p,{children:"Pico-W testing is done with pytest library"}),"\n",(0,r.jsx)(n.p,{children:"Python unittest library is used for machine learning"}),"\n",(0,r.jsx)(n.h2,{id:"front-end",children:"Front End"}),"\n",(0,r.jsx)(n.h3,{id:"pet-page",children:"Pet Page"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" HandleFoodUse() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Health increases after eating food"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user is feeding their pets food","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks on food button to feed pet"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"handleFoodUse(selectedFoodIndex: Int) is called, health bar should increase"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Food quantity decreases after eating food"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user is feeding their pets food","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks on food button to feed pet"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"handleFoodUse(selectedFoodIndex: Int) is called, food quantity should decrease"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Health should not exceed after eating food"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user is feeding their pet with the pet's health bar full","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks on food button to feed pet"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"handleFoodUse(selectedFoodIndex: Int) is called, health bar bar should not exceed full"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Alert users of insufficient amount of food"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user is feeding their pets with insufficient amount of food","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks on food button to feed pet"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"handleFoodUse(selectedFoodIndex: Int) is called, an alert pops up telling the user they have no more food"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Alert users that health is at max"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user is feeding their pets the health already full","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks on food button to feed pet"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"handleFoodUse(selectedFoodIndex: Int) is called, an alert pops up telling the user that the health bar is already full"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"workoutviewmodel",children:"WorkoutViewModel"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testIsInputZeroOrInvalid()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates whether input values are zero or invalid"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User inputs values for sets, reps, weights, and countdown","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User enters input values"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The function correctly identifies whether the input values are zero or invalid."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testIsValidInput()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates the validity of input values"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User inputs values for sets, reps, weights, and countdown","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User enters input values"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The function correctly identifies whether the input values are valid."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testStringToInt()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates the conversion of string to integer"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User inputs a string value","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User enters a string value"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The function correctly converts the string to an integer if possible; otherwise, returns nil."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testResetWorkoutState()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates the reset of workout state"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User resets the workout state","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User initiates a new workout"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The workout state variables are reset to their initial values."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testStartWorkout()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates the start of workout"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User starts a workout session","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User initiates the start of a workout session"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The workout state is updated to indicate that the workout has started."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testNextSet()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates the transition to the next set"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User progresses to the next set during a workout session","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User initiates the transition to the next set"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The workout state and relevant variables are updated accordingly for the next set."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testResetTimer()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Validates the reset of timer"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User resets the timer during a workout session","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User initiates a new workout"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The timer variables are reset, and the timer is deactivated."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"pet-store-page",children:"Pet Store Page"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" sortItems() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"The shop is sorted by name A-Z"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user clicks sort by name to get the items in alphabetical order","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks sort by name"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"sortItems(sortByPrice: false) is called, the items will be sorted in alphabetical order"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"The shop is sorted by price lowest-highest"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test user clicks sort by price to get the items from lowest to highest cost","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks sort by price"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"sortItems(sortedByPrice: true) is called, the items will be sorted by price"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"formcriteria",children:"FormCriteria"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" getRandomGoodFormPhrase()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"The user gets one of three phrases when having good form"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User finishes a workout and wants their feedback","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User clicks 'finish set' or 'finish workout'"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"getRandomGoodFormPhrase() is called and the user sees one of the three phrases"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" updateWorkoutAnalysis()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"updates the workout analysis data with provided current data"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User completes a workout session and wants to see the results","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User finishes a workout session"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The workout analysis is updated with the provided data and contains the expected keys."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" averageUpDownAcceleration()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Calculate of average up-down acceleration"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate calculation of up-down acceleration average","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User performs several sets of exercises"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The calculated average up-down acceleration falls within the range of 0 to 1."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" averageWristLeftRightRotation()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Calculates average wrist left-right rotation"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate calculation of left-right wrist rotation average","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User performs several sets of exercises"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The calculated average wrist left-right rotation falls within the range of 0 to 1."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" overallWorkoutUpDownAverage()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"calculates overall workout up-down average"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate calculation of overall workout up-down average","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User completes a workout session"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The calculated overall workout up-down average falls within the range of 0 to 1 and is approximately equal to the expected value."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" averageElbowSwing()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"calculates average elbow swing"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate calculation of elbow swing average","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User performs several sets of exercises"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The calculated average elbow swing falls within the range of 0 to 1."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" averageElbowFlareForwardBackward()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"calculates average elbow flare forward-backward"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate calculation of elbow flare forward-backward average","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User performs several sets of exercises"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The calculated average elbow flare forward-backward falls within the range of 0 to 1."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" overallWorkoutElbowSwing()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"calculates overall workout elbow swing"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate calculation of overall workout elbow swing","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User completes a workout session"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The calculated overall workout elbow swing falls within the range of 0 to 1 and is approximately equal to the expected value."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" dangerousForm()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Detects of dangerous form"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate detection of dangerous form based on provided data","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User performs exercises with varying data"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The function correctly identifies whether the provided data indicates dangerous form."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" giveFeedback()"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"generation of feedback"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User wants to ensure accurate generation of feedback based on provided data","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User completes an exercise session"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The feedback generated for acceleration and elbow swing is formatted correctly, and the custom text feedback for elbow is correct."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"backend",children:"Backend"}),"\n",(0,r.jsx)(n.h3,{id:"cloudkit-db",children:"CloudKit DB"}),"\n",(0,r.jsx)(s,{children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testConnectToCloudKit()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if the application can connect to CloudKit DB and find the correct container"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns true if successful connection, else return false"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testFetchRecord()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if given input parameters can query the CloudKit DB and return a record"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns true if record is not nil, else return false"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testFetchRecordAndCheckCurrency()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if given user record has a specified field value"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns values of the record for the parameters match, else return false for no record returned or incorrect record"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testGetReference()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if given a reference value can query the CloudKit DB and return a referenced record"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns values of the record for the parameters, else return false for no record returned or incorrect record"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testAccountCreatedCloud()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if account credentials were stored after login button pressed"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns true if record return with correct ID, else return false"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testUpdateCurrency()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if after button press, updates the user's total currency after transaction and updates the DB"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns the same currency as currently stored on local model from the DB, else return false if different value or no value returned"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testUploadImage()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if a CKAsset was successfully uploaded to CloudKit DB"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns a successful entry, else false"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"testFetchImage()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test to see if can fetch a CKAsset from CloudKit DB"}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns a binary CKAsset, else false"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,r.jsx)(n.h3,{id:"coredata-local-db",children:"CoreData Local DB"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" setUpWithError() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Sets up an in-memory Core Data environment for each test"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures tests do not affect real user data by creating a mock environment","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/Setup action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Core Data stack setup with in-memory store type"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"CoreDataManager instance is initialized without errors"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" tearDownWithError() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Cleans up and deallocates the in-memory Core Data stack after each test"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures all data and instances are cleaned up properly","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/Cleanup action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Removing persistent stores from the coordinator"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Persistent stores are removed without errors, and CoreDataManager is deallocated"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testCreateWorkoutSession() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests the ability to create a WorkoutSession entity"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Validating entity creation within the Core Data environment","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a WorkoutSession with specified attributes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"WorkoutSession entity is not nil and correctly initialized with provided values"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testCreateAndFetchWorkoutSessions() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests integration of creating and fetching WorkoutSession entities"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures data consistency within the created and fetched entities","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a WorkoutSession and then fetch it"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The fetched WorkoutSessions list should not be empty and contain the created session"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testFetchWorkoutSessions() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests fetching WorkoutSession entities"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Validates the fetch functionality of the Core Data manager","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create and then fetch WorkoutSession entities"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The fetch returns a list containing the newly created sessions"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testFetchWorkoutSessionsOnDate() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests fetching WorkoutSession entities based on a specific date"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures that sessions on a given date are correctly retrieved","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a WorkoutSession for today and fetch by today's date"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The fetch returns a list containing only today's sessions"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testGetNextWorkoutNumber() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests retrieving the next workout number"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures correct incrementation of workout numbers","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a WorkoutSession and then retrieve the next workout number"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The next workout number should be greater than the number of the last session created"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testFetchExerciseSets() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests fetching ExerciseSet entities associated with a WorkoutSession"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Validates the fetch functionality for ExerciseSets tied to specific sessions","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a WorkoutSession and an associated ExerciseSet, then fetch the sets"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The fetched exercise sets list should contain the created set"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testUpdateWorkoutSession() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests updating a WorkoutSession entity"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Verifies that changes to an entity are persisted correctly","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Update an existing WorkoutSession's attributes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The updated WorkoutSession should reflect the new attribute values"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testUpdateExerciseSet() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests updating an ExerciseSet entity"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures property changes are saved correctly within the entity","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Update an existing ExerciseSet's attributes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The updated ExerciseSet should reflect the new attribute values"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testFetchAllExerciseSets() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests fetching all ExerciseSet entities"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Validates that multiple sets are returned when expected","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create multiple ExerciseSets and fetch all"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The fetched exercise sets list should include all created sets"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:" testFetchExerciseSetsForWorkoutNum() "}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tests fetching ExerciseSet entities by workout number"})})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensures they are correctly retrieved based on the workout number","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input/User action","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create an ExerciseSet for a specific workout number and then fetch by that number"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Expected Result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The fetched exercise sets list should contain the sets for the specific workout number"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var r=s(67294);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);