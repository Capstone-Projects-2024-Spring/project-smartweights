"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[740],{73509:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var i=r(85893),n=r(3905);const l={sidebar_position:3},o="CalculatorModel.java",a={id:"api-specification/calculator-model-generated",title:"CalculatorModel.java",description:"(generated using Javadoc to Markdown)",source:"@site/docs/api-specification/calculator-model-generated.md",sourceDirName:"api-specification",slug:"/api-specification/calculator-model-generated",permalink:"/project-smartweights/docs/api-specification/calculator-model-generated",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-smartweights/edit/main/documentation/docs/api-specification/calculator-model-generated.md",tags:[],version:"current",lastUpdatedBy:"Tu",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"API 1 - Swagger Petstore",permalink:"/project-smartweights/docs/api-specification/openapi-spec"},next:{title:"Test Procedures",permalink:"/project-smartweights/docs/category/test-procedures"}},c={},d=[{value:"<code>public class CalculatorModel</code>",id:"public-class-calculatormodel",level:2},{value:"<code>private double displayValue</code>",id:"private-double-displayvalue",level:2},{value:"<code>private double internalValue</code>",id:"private-double-internalvalue",level:2},{value:"<code>private String displayString</code>",id:"private-string-displaystring",level:2},{value:"<code>private String operation</code>",id:"private-string-operation",level:2},{value:"<code>private boolean start</code>",id:"private-boolean-start",level:2},{value:"<code>private boolean dot</code>",id:"private-boolean-dot",level:2},{value:"<code>public CalculatorModel()</code>",id:"public-calculatormodel",level:2},{value:"<code>public String getValue()</code>",id:"public-string-getvalue",level:2},{value:"<code>public void update(String text)</code>",id:"public-void-updatestring-text",level:2},{value:"<code>public double operationAdd(double rhs, double lhs)</code>",id:"public-double-operationadddouble-rhs-double-lhs",level:2}];function s(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.ah)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"calculatormodeljava",children:"CalculatorModel.java"}),"\n",(0,i.jsxs)(t.p,{children:["(generated using ",(0,i.jsx)(t.a,{href:"https://delight-im.github.io/Javadoc-to-Markdown/",children:"Javadoc to Markdown"}),")"]}),"\n",(0,i.jsx)(t.h2,{id:"public-class-calculatormodel",children:(0,i.jsx)(t.code,{children:"public class CalculatorModel"})}),"\n",(0,i.jsx)(t.p,{children:"This is the model of this MVC implementation of a calculator. It performs the functions of the calculator and keeps track of what the user has entered."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Author:"})," Tom Bylander"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"private-double-displayvalue",children:(0,i.jsx)(t.code,{children:"private double displayValue"})}),"\n",(0,i.jsx)(t.p,{children:"This is the numeric value of the number the user is entering, or the number that was just calculated."}),"\n",(0,i.jsx)(t.h2,{id:"private-double-internalvalue",children:(0,i.jsx)(t.code,{children:"private double internalValue"})}),"\n",(0,i.jsx)(t.p,{children:"This is the previous value entered or calculated."}),"\n",(0,i.jsx)(t.h2,{id:"private-string-displaystring",children:(0,i.jsx)(t.code,{children:"private String displayString"})}),"\n",(0,i.jsx)(t.p,{children:"This is the String corresponding to what the user. is entering"}),"\n",(0,i.jsx)(t.h2,{id:"private-string-operation",children:(0,i.jsx)(t.code,{children:"private String operation"})}),"\n",(0,i.jsx)(t.p,{children:"This is the last operation entered by the user."}),"\n",(0,i.jsx)(t.h2,{id:"private-boolean-start",children:(0,i.jsx)(t.code,{children:"private boolean start"})}),"\n",(0,i.jsx)(t.p,{children:"This is true if the next digit entered starts a new value."}),"\n",(0,i.jsx)(t.h2,{id:"private-boolean-dot",children:(0,i.jsx)(t.code,{children:"private boolean dot"})}),"\n",(0,i.jsx)(t.p,{children:"This is true if a decimal dot has been entered for the current value."}),"\n",(0,i.jsx)(t.h2,{id:"public-calculatormodel",children:(0,i.jsx)(t.code,{children:"public CalculatorModel()"})}),"\n",(0,i.jsx)(t.p,{children:"Initializes the instance variables."}),"\n",(0,i.jsx)(t.h2,{id:"public-string-getvalue",children:(0,i.jsx)(t.code,{children:"public String getValue()"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Returns:"})," the String value of what was just calculated"]}),"\n",(0,i.jsx)(t.p,{children:"or what the user is entering"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"public-void-updatestring-text",children:(0,i.jsx)(t.code,{children:"public void update(String text)"})}),"\n",(0,i.jsx)(t.p,{children:"Updates the values maintained by the calculator based on the button that the user has just clicked."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Parameters:"})," ",(0,i.jsx)(t.code,{children:"text"})," \u2014 is the name of the button that the user has just clicked"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"public-double-operationadddouble-rhs-double-lhs",children:(0,i.jsx)(t.code,{children:"public double operationAdd(double rhs, double lhs)"})}),"\n",(0,i.jsxs)(t.p,{children:["Operation to add two numbers. ",(0,i.jsx)("pre",{children:" operationAdd(3,2); // should equal 5.0 "})]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Parameters:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"rhs"})," \u2014 ",(0,i.jsx)(t.code,{children:"double"})," representing the right hand side of the operator"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"lhs"})," \u2014 ",(0,i.jsx)(t.code,{children:"double"})," representing the left hand side of the operator"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Returns:"})," ",(0,i.jsx)(t.code,{children:"double"})]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,n.ah)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>d});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)r=l[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)r=l[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=i.createContext({}),d=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=d(r),h=n,b=p["".concat(c,".").concat(h)]||p[h]||s[h]||l;return r?i.createElement(b,o(o({ref:t},u),{},{components:r})):i.createElement(b,o({ref:t},u))}));u.displayName="MDXCreateElement"}}]);